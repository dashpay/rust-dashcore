on: [push, pull_request]

name: Continuous integration

jobs:
  Tests:
    name: Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - rust: stable
            env:
              DO_COV: true
              AS_DEPENDENCY: true
              DO_NO_STD: false
          - rust: beta
            env:
              AS_DEPENDENCY: true
              DO_NO_STD: false
          - rust: nightly
            env:
              # TODO: running with DO_BENCH: true causes the test to fail
              #              DO_BENCH: true
              AS_DEPENDENCY: true
              DO_NO_STD: false
              DO_DOCS: true
          - rust: 1.80.0
            env:
              AS_DEPENDENCY: true
    steps:
      - name: Checkout Crate
        uses: actions/checkout@v4
      - name: Checkout Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Running test script
        env: ${{ matrix.env }}
        run: ./contrib/test.sh

# TODO: need to support compiling rust-x11-hash under s390x
#  Cross:
#    name: Cross testing
#    if: ${{ !github.event.act }}
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout Crate
#        uses: actions/checkout@v2
#      - name: Checkout Toolchain
#        uses: actions-rs/toolchain@v1
#        with:
#          profile: minimal
#          toolchain: stable
#          override: true
#      - name: Install target
#        run: rustup target add s390x-unknown-linux-gnu
#      - name: install cross
#        run: cargo install cross
#      - name: run cross test
#        run: cross test --target s390x-unknown-linux-gnu

# TODO: need to fix the ability to run the embedded tests
#  Embedded:
#    runs-on: ubuntu-latest
#    env:
#      RUSTFLAGS: "-C link-arg=-Tlink.x"
#      CARGO_TARGET_THUMBV7M_NONE_EABI_RUNNER: "qemu-system-arm -cpu cortex-m3 -machine mps2-an385 -nographic -semihosting-config enable=on,target=native -kernel"
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Set up QEMU
#        run: sudo apt update && sudo apt install -y qemu-system-arm gcc-arm-none-eabi
#      - name: Checkout Toolchain
#        uses: dtolnay/rust-toolchain@nightly
#        with:
#          targets: thumbv7m-none-eabi
#      - name: Install src
#        run: rustup component add rust-src
#      - name: Run dash/embedded
#        run: cd dash/embedded && cargo run --target thumbv7m-none-eabi
#      - name: Run hashes/embedded no alloc
#        run: cd hashes/embedded && cargo run --target thumbv7m-none-eabi
#      - name: Run hashes/embedded with alloc
#        run: cd hashes/embedded && cargo run --target thumbv7m-none-eabi --features=alloc

    rpc-tests:
      name: Tests
      runs-on: ubuntu-latest
      strategy:
        matrix:
          include:
            - rust: stable
              env:
                RUSTFMTCHK: true
            - rust: nightly
              env:
                RUSTFMTCHK: false
            - rust: 1.29.0
              env:
                PIN_VERSIONS: true
      steps:
        - name: Checkout Crate
          uses: actions/checkout@v2
        - name: Checkout Toolchain
          uses: actions-rs/toolchain@v1
          with:
            profile: minimal
            toolchain: ${{ matrix.rust }}
            override: true
        - name: Running test script
          env: ${{ matrix.env }}
          run: ./contrib/test.sh

    integrations-tests:
      name: Integration Tests
      runs-on: ubuntu-latest
      strategy:
        matrix:
          rust: [stable]
          bitcoinversion:
            [
              "0.18.0",
              "0.18.1",
              "0.19.0.1",
              "0.19.1",
              "0.20.0",
              "0.20.1",
              "0.21.0",
            ]
      steps:
        - name: Checkout Crate
          uses: actions/checkout@v2
        - name: Checkout Toolchain
          uses: actions-rs/toolchain@v1
          with:
            profile: minimal
            toolchain: ${{ matrix.rust }}
            override: true
        - name: Running test script
          env:
            BITCOINVERSION: ${{ matrix.bitcoinversion }}
          run: ./contrib/test-rpc.sh
